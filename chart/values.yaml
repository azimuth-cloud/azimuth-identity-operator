# The TLS configuration for Dex instances
tls:
  # Indicates whether TLS is enabled
  enabled: true
  # Indicates whether to create a certificate object
  createCertificate: true
  # The name of the TLS secret to create
  # If createCertificate = false, this MUST be set to an existing secret
  # If createCertificate = true and this is empty, a name is derived from the release name
  secretName:
  # The issuer ref to use for the certificate
  # Only used if createCertificate = true
  issuerRef:

# Configuration for the operator
# For all available options, see azimuth_identity/config.py
config: {}

# The image to use for the operator
image:
  repository: ghcr.io/stackhpc/azimuth-identity-operator
  pullPolicy: IfNotPresent
  tag: ""  #Â Defaults to appVersion if not given

imagePullSecrets: []

# Liveness probe for the operator
livenessProbe:
  httpGet:
    path: /healthz
    port: 8000
  periodSeconds: 10
  failureThreshold: 1

# Liveness probe for the operator
startupProbe:
  httpGet:
    path: /healthz
    port: 8000
  periodSeconds: 10
  failureThreshold: 3

# Pod-level security context
podSecurityContext:
  runAsNonRoot: true

# Container-level security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true

# Resource requests and limits for the containers
resources: {}

# Node selector for operator pods
nodeSelector: {}

# Affinity rules for operator pods
affinity: {}

# Tolerations for operator pods
tolerations: []

# Settings for kube-state-metrics
metrics:
  enabled: false
  # Configuration for the dashboard
  dashboard:
    enabled: true
    labels:
      grafana_dashboard: "1"
  prometheus:
    rules:
      enabled: true
    monitor:
      enabled: true
      honorLabels: true
  # Disable all the default collectors
  collectors: []
  # Allow kube-state-metrics read-only access to our CRDs
  rbac:
    create: true
    extraRules:
      - apiGroups:
          - identity.azimuth.stackhpc.com
        resources:
          - platforms
          - realms
        verbs:
          - list
          - watch
          - get
  # Configure kube-state-metrics to report only on our custom resources
  extraArgs:
    - --custom-resource-state-only=true
  customResourceState:
    enabled: true
    config:
      kind: CustomResourceStateMetrics
      spec:
        resources:
          - groupVersionKind:
              group: identity.azimuth.stackhpc.com
              version: v1alpha1
              kind: Realm
            metricNamePrefix: azimuth_identity_realm
            labelsFromPath:
              realm_namespace: [metadata, namespace]
              realm_name: [metadata, name]
            metrics:
              - name: phase
                help: "Realm phase"
                each:
                  type: Info
                  info:
                    labelsFromPath:
                      phase: [status, phase]

          - groupVersionKind:
              group: identity.azimuth.stackhpc.com
              version: v1alpha1
              kind: Platform
            metricNamePrefix: azimuth_identity_platform
            labelsFromPath:
              platform_namespace: [metadata, namespace]
              platform_name: [metadata, name]
              realm_name: [spec, realmName]
            metrics:
              - name: service
                help: "Indicates the services for the platform"
                each:
                  type: Info
                  info:
                    path: [spec, zenithServices]
                    labelFromKey: service_name
                    labelsFromPath:
                      service_subdomain: [subdomain]
                      service_fqdn: [fqdn]
              - name: phase
                help: "Platform phase"
                each:
                  type: Info
                  info:
                    labelsFromPath:
                      phase: [status, phase]
